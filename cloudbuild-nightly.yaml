# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
steps:
  # # deploy
  # - name: gcr.io/cloud-builders/docker
  #   id: pull-deploy
  #   waitFor: ['-']
  #   args:
  #     - pull
  #     - 'gcr.io/llm-containers/deploy:latest'
  # - name: gcr.io/cloud-builders/docker
  #   id: build-deploy
  #   waitFor: ['pull-deploy']
  #   args:
  #     - build
  #     - '-t'
  #     - 'gcr.io/llm-containers/deploy:github${SHORT_SHA}'
  #     - '--cache-from'
  #     - 'gcr.io/llm-containers/deploy:latest'
  #     - '-f'
  #     - docker/deploy.Dockerfile
  #     - .
  # - name: gcr.io/cloud-builders/docker
  #   id: push-deploy
  #   waitFor: ['build-deploy']
  #   args:
  #     - push
  #     - 'gcr.io/llm-containers/deploy:github${SHORT_SHA}'
  # # batch
  # - name: gcr.io/cloud-builders/docker
  #   id: pull-batch
  #   waitFor: ['-']
  #   args:
  #     - pull
  #     - 'gcr.io/llm-containers/batch:latest'
  # - name: gcr.io/cloud-builders/docker
  #   id: build-batch
  #   waitFor: ['pull-batch']
  #   args:
  #     - build
  #     - '-t'
  #     - 'gcr.io/llm-containers/batch:github${SHORT_SHA}'
  #     - '--cache-from'
  #     - 'gcr.io/llm-containers/batch:latest'
  #     - '-f'
  #     - docker/batch.Dockerfile
  #     - .
  # - name: gcr.io/cloud-builders/docker
  #   id: push-batch
  #   waitFor: ['build-batch']
  #   args:
  #     - push
  #     - 'gcr.io/llm-containers/batch:github${SHORT_SHA}'
  # # train
  # - name: gcr.io/cloud-builders/docker
  #   id: pull-train
  #   waitFor: ['-']
  #   args:
  #     - pull
  #     - 'gcr.io/llm-containers/train:latest'
  # - name: gcr.io/cloud-builders/docker
  #   id: build-train
  #   waitFor: ['pull-train']
  #   args:
  #     - build
  #     - '-t'
  #     - 'gcr.io/llm-containers/train:github${SHORT_SHA}'
  #     - '--cache-from'
  #     - 'gcr.io/llm-containers/train:latest'
  #     - '-f'
  #     - docker/train.Dockerfile
  #     - .
  # - name: gcr.io/cloud-builders/docker
  #   id: push-train
  #   waitFor: ['build-train']
  #   args:
  #     - push
  #     - 'gcr.io/llm-containers/train:github${SHORT_SHA}'
  # #predict
  # - name: gcr.io/cloud-builders/docker
  #   id: pull-predict
  #   waitFor: ['-']
  #   args:
  #     - pull
  #     - 'gcr.io/llm-containers/predict:latest'
  # - name: gcr.io/cloud-builders/docker
  #   id: build-predict
  #   waitFor: ['pull-predict']
  #   args:
  #     - build
  #     - '-t'
  #     - 'gcr.io/llm-containers/predict:github${SHORT_SHA}'
  #     - '--cache-from'
  #     - 'gcr.io/llm-containers/predict:latest'
  #     - '-f'
  #     - docker/predict.Dockerfile
  #     - .
  # - name: gcr.io/cloud-builders/docker
  #   id: push-predict
  #   waitFor: ['build-predict']
  #   args:
  #     - push
  #     - 'gcr.io/llm-containers/predict:github${SHORT_SHA}'
  # # convert
  # - name: gcr.io/cloud-builders/docker
  #   id: pull-convert
  #   waitFor: ['-']
  #   args:
  #     - pull
  #     - 'gcr.io/llm-containers/convert:latest'
  # - name: gcr.io/cloud-builders/docker
  #   id: build-convert
  #   waitFor: ['pull-convert']
  #   args:
  #     - build
  #     - '-t'
  #     - 'gcr.io/llm-containers/convert:github${SHORT_SHA}'
  #     - '--cache-from'
  #     - 'gcr.io/llm-containers/convert:latest'
  #     - '-f'
  #     - docker/convert.Dockerfile
  #     - .
  #   env:
  #     - "DOCKER_BUILDKIT=1"
  # - name: gcr.io/cloud-builders/docker
  #   id: push-convert
  #   waitFor: ['build-convert']
  #   args:
  #     - push
  #     - 'gcr.io/llm-containers/convert:github${SHORT_SHA}'
  # # predict-triton
  # - name: gcr.io/cloud-builders/docker
  #   id: pull-triton
  #   waitFor: ['-']
  #   args:
  #     - pull
  #     - 'gcr.io/llm-containers/predict-triton:latest'
  # - name: gcr.io/cloud-builders/docker
  #   id: build-triton
  #   waitFor: ['pull-triton']
  #   args:
  #     - build
  #     - '-t'
  #     - 'gcr.io/llm-containers/predict-triton:github${SHORT_SHA}'
  #     - '--cache-from'
  #     - 'gcr.io/llm-containers/predict-triton:latest'
  #     - '-f'
  #     - docker/predict-triton.Dockerfile
  #     - .
  # - name: gcr.io/cloud-builders/docker
  #   id: push-triton
  #   waitFor: ['build-triton']
  #   args:
  #     - push
  #     - 'gcr.io/llm-containers/predict-triton:github${SHORT_SHA}'
  - name: gcr.io/cloud-builders/docker
    id: build-gke
    waitFor: ['-']
    args:
      - build
      - '-t'
      - 'gke-provision-deploy'
      - '--cache-from'
      - 'gcr.io/llm-containers/gke-provision-deploy:latest'
      - '-f'
      - docker/gke/gke-provision-deploy.Dockerfile
      - .
  - name: gcr.io/cloud-builders/docker
    id: build-gke-test
    waitFor: ['build-gke']
    args:
      - build
      - '-t'
      - 'gke-test'
      - '--build-arg'
      - 'baseimage=gke-provision-deploy'
      - '-f'
      - docker/gke/gke-test.Dockerfile
      - .
    env:
      - "DOCKER_BUILDKIT=1"
  # test
  # - name: gcr.io/cloud-builders/docker
  #   id: build-test
  #   waitFor: ['-']
  #   args:
  #     - build
  #     - '-t'
  #     - test_docker
  #     - '--build-arg'
  #     - 'MODEL_NAME_APPEND=${SHORT_SHA}'
  #     - '-f'
  #     - docker/test.Dockerfile
  #     - .
  # - name: gcr.io/cloud-builders/docker
  #   id: run-test
  #   waitFor: ['push-deploy', 'push-batch', 'push-train', 'push-predict', 'build-test']
  #   args:
  #     - run
  #     - '--network=cloudbuild'
  #     - test_docker
  #     - '--enable_caching=0'
  #     - '--config=small1vm1gpu.json'
  #     - '--image_tag=github${SHORT_SHA}'
  #     - '--project=$PROJECT_ID'
  #     - '--pipeline_root=gs://t5-shared/pipeline_runs/'
  #     - '--endpoint_name=t5-nightly'
  #     - '--cleanup_endpoint'
  # - name: gcr.io/cloud-builders/docker
  #   id: run-triton-test
  #   waitFor: ['push-deploy', 'push-batch', 'push-train', 'push-predict', 'push-convert', 'push-triton', 'build-test']
  #   args:
  #     - run
  #     - '--network=cloudbuild'
  #     - test_docker
  #     - '--enable_caching=0'
  #     - '--config=small1vm1gpu.json'
  #     - '--image_tag=github${SHORT_SHA}'
  #     - '--project=$PROJECT_ID'
  #     - '--pipeline_root=gs://t5-shared/pipeline_runs/'
  #     - '--verify_result=predict_result_triton.json'
  #     - '--endpoint_name=t5-nightly-ft'
  #     - '--use_faster_transformer'
  #     - '--cleanup_endpoint'
  # - name: gcr.io/cloud-builders/docker
  #   id: run-gke-test-docker
  #   #waitFor: ['push-convert', 'push-triton', 'push-predict']
  #   waitFor: ['build-gke-test']
  #   args:
  #     - run
  #     - '--network=cloudbuild'
  #     - "-e"
  #     - "EXISTING_CLUSTER_ID=llm-test-gke"
  #     - "-e"
  #     - "CONVERTED_MODEL_UPLOAD_PATH=gs://converted_models/flan-t5-base"
  #     - "-e"
  #     - "MODEL_SOURCE_PATH=google/flan-t5-base"
  #     - "-e"
  #     - "MODEL_NAME=flan-t5-base"
  #     - "-e"
  #     - "INFERENCING_IMAGE_TAG=latest"
  #     - "-e"
  #     - "USE_FASTER_TRANSFORMER=1"
  #     - "-e"
  #     - "ACCELERATOR_TYPE=nvidia-tesla-a100"
  #     - "-e"
  #     - "REGION=us-central1"
  #     - 'gke-test'
  #     - '--verify'
  #     - "--verify-input-payload=predict_payload.json"
  #     - "--verify-output-payload=predict_result_triton.json"
  #     - "--project=llm-containers"
  - name: gcr.io/cloud-builders/gcloud
    id: run-gke-test-gcloud
    #waitFor: ['push-convert', 'push-triton', 'push-predict']
    waitFor: ['build-gke-test']
    args:
      - run
      - jobs
      - create
      - gke-test-${SHORT_SHA}
      - "--memory=4Gi"
      - "--task-timeout=60m"
      - "--vpc-connector=cloudrun-vpc-connector"
      - "--max-retries=0"
      - "--region=us-central1"
      - "--image=gcr.io/llm-containers/gke-test:test"
      # - "--set-env-vars=EXISTING_CLUSTER_ID=llm-test6-gke"
      - "--set-env-vars=NAME_PREFIX=test-create-1253"
      - "--set-env-vars=CONVERTED_MODEL_UPLOAD_PATH=gs://converted_models/flan-t5-base2/${SHORT_SHA}"
      - "--set-env-vars=MODEL_SOURCE_PATH=google/flan-t5-base"
      - "--set-env-vars=MODEL_NAME=flan-t5-base"
      - "--set-env-vars=INFERENCING_IMAGE_TAG=latest"
      - "--set-env-vars=USE_FASTER_TRANSFORMER=1"
      - "--set-env-vars=ACCELERATOR_TYPE=nvidia-tesla-v100"
      - "--set-env-vars=ORCHESTRATOR_TYPE=gke"
      - "--set-env-vars=GKE_ENABLE_COMPACT_PLACEMENT=false"
      - "--set-env-vars=VM_TYPE=n1-standard-32"
      - "--set-env-vars=GPU_COUNT=4"
      - "--set-env-vars=GKE_NODE_POOL_COUNT=1"
      - "--set-env-vars=GKE_NODE_COUNT_PER_NODE_POOL=2"
      - "--set-env-vars=REGION=us-central1"
      - "--set-env-vars=ZONE=us-central1-a"
      - "--set-env-vars=GPU_NUMBER=4"
      - "--args=--verify,--verify-input-payload=predict_payload.json,--verify-output-payload=predict_result_triton.json,--project=llm-containers,--cleanup"
      - "--execute-now"
      - "--wait"
timeout: 86400s
options:
  pool:
    name: projects/llm-containers/locations/us-central1/workerPools/gke-accessible-pool
